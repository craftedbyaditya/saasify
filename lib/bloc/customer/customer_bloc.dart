import 'package:intl/intl.dart';
import 'package:saasify_lite/gServices/g_sheet_services.dart';
import 'package:saasify_lite/utils/utils.dart';

class AddCustomerService {
  static Future<void> addItem({
    required String userName,
    required String userContact,
  }) async {
    if (!GSheetsService.isInitialized) {
      await GSheetsService.init();
    }

    // Check if the mobile number already exists
    final customers = await GSheetsService.customerSheet!.values.allRows();
    final existingCustomer = customers.firstWhere(
      (row) => row[3] == userContact,
      orElse: () => [],
    );

    if (existingCustomer.isNotEmpty) {
      throw Exception('Customer already exists');
    }

    final now = DateTime.now();
    final dateFormat = DateFormat('dd/MM/yyyy');
    final createdAt = dateFormat.format(now);
    final updatedAt = dateFormat.format(now);

    final values = [
      generateUserId(), // Item ID will be auto-generated by the sheet
      userName,
      '',
      userContact,
      '',
      createdAt,
      updatedAt,
    ];

    await GSheetsService.customerSheet!.values.appendRow(values);
  }

  static Future<List<Map<String, dynamic>>> fetchAllCustomers() async {
    if (!GSheetsService.isInitialized) {
      await GSheetsService.init();
    }

    final customers = await GSheetsService.customerSheet!.values.allRows();
    return customers.skip(1).map((row) {
      return {
        'id': row[0],
        'name': row[1],
        'contact': row[3],
        'createdAt': row[5],
        'updatedAt': row[6],
      };
    }).toList();
  }
}

class AddCustomerBloc {
  Future<String?> addItem({
    required String userName,
    required String userContact,
  }) async {
    try {
      await AddCustomerService.addItem(
        userName: userName,
        userContact: userContact,
      );
      return null; // No error
    } catch (e) {
      return e.toString(); // Return error message
    }
  }

  Future<List<Map<String, dynamic>>> fetchAllCustomers() async {
    return await AddCustomerService.fetchAllCustomers();
  }
}
